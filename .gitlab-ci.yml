stages:
  - build
  - deploy


build:
    stage: build
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: ['']
    script:
        - mkdir -p /kaniko/.docker
        - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "gitlab-ci-token" "${CI_JOB_TOKEN}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
        - >-
            /kaniko/executor
            --single-snapshot=true
            --context "."
            --dockerfile "Dockerfile"
            --destination $CI_REGISTRY_IMAGE:${CI_COMMIT_BRANCH//\//-}

.docker-deploy:
  stage: deploy
  image: docker:28.1.1
  services:
    - docker:28.1.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: ""
    DOCKER_TLS_VERIFY: ""
    DOCKER_DRIVER: overlay2
    SECURE_FILES_DOWNLOAD_PATH: '.secrets/'
    DOC_FILE_PATH: "/app/data/pdfs"
  before_script:
    - apk add --no-cache bash curl openssh-client docker-compose gettext
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
    - mkdir -p /root/.ssh
    - mv .secrets/eleps_deploy_remote /root/.ssh/
    - echo "STAND_HOST_IP=$STAND_HOST_IP"
    - ssh-keyscan -H $STAND_HOST_IP >> /root/.ssh/known_hosts
    - chmod 600 "/root/.ssh/eleps_deploy_remote"
    - export SSH_USERNAME="root"
    - export SSH_PRIVATE_KEY_PATH="/root/.ssh/eleps_deploy_remote"
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile /dev/null\n" > /root/.ssh/config
    - rm -rf .secrets
  script:
    - export LLM_MODEL_TYPE="$LLM_MODEL_TYPE"
    - export LLM_MODEL_NAME="$LLM_MODEL_NAME"
    - export LLM_MODEL_URL="$LLM_MODEL_URL"
    - export LLM_MODEL_API_KEY="$LLM_MODEL_API_KEY"
    - envsubst < "./docker/docker-compose.${CI_COMMIT_BRANCH}.yml" > "./docker/docker-compose.tmp.yml"
    - mkdir -p deploy_tmp
    - cp -r Dockerfile Dockerfile.streamlit requirements.txt start.sh main.py streamlit_app.py deploy_tmp/
    - cp -r api configs data_processing llm rag vector_store data ui deploy_tmp/
    - cp ./docker/docker-compose.tmp.yml deploy_tmp/docker-compose.yml
    - tar czf deploy.tar.gz -C deploy_tmp .
    - ssh -i "$SSH_PRIVATE_KEY_PATH" "$SSH_USERNAME@$STAND_HOST_IP" "mkdir -p ~/.deployments/MedRAGAssistant-${CI_COMMIT_BRANCH//\//-}/"
    - scp -i "$SSH_PRIVATE_KEY_PATH" deploy.tar.gz "$SSH_USERNAME@$STAND_HOST_IP:~/.deployments/MedRAGAssistant-${CI_COMMIT_BRANCH//\//-}/"
    - ssh -i "$SSH_PRIVATE_KEY_PATH" "$SSH_USERNAME@$STAND_HOST_IP" "
        set -e &&
        cd ~/.deployments/MedRAGAssistant-${CI_COMMIT_BRANCH//\//-} &&
        tar xzf deploy.tar.gz &&
        rm deploy.tar.gz &&
        docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY} &&
        docker-compose -f docker-compose.yml pull &&
        docker-compose -f docker-compose.yml down --remove-orphans &&
        docker-compose -f docker-compose.yml up -d --force-recreate &&
        chmod +x ./start.sh &&
        ./start.sh &&
        docker image prune -af &&
        rm docker-compose.yml
      "

deploy-dev:
  extends: .docker-deploy
  dependencies: []
  environment: dev
  only:
    - dev

deploy-main:
  extends: .docker-deploy
  dependencies: []
  environment: main
  only:
    - main
